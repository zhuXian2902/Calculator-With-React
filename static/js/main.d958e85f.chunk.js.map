{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Buttons","props","pre","operator","operation","num1","num2","compute","str","ans","numArray","operators","i","length","push","temp","pop","total","n2","addExp","e","num","setState","prev","exp","state","isNaN","className","this","map","key","btnValue","React","Component","Button","onClick","Calculator","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d958e85f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/** @format */\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Buttons extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tans: 0,\n\t\t\texp: '',\n\t\t};\n\t}\n\n\tpre = (operator) => {\n\t\tif (operator === '*' || operator === '/' || operator === '%') return 2;\n\t\telse if (operator === '+' || operator === '-') return 1;\n\t\treturn 0;\n\t};\n\n\toperation = (num1, num2, operator) => {\n\t\tif (operator === '+') return num1 + num2;\n\t\telse if (operator === '-') return num1 - num2;\n\t\telse if (operator === '*') return num1 * num2;\n\t\telse if (operator === '/') return num1 / num2;\n\t\telse if (operator === '%') return num1 % num2;\n\t};\n\n\tcompute = (str, ans) => {\n\t\tlet numArray = [ans];\n\t\tlet operators = [];\n\t\t// console.log(numArray);\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tif (str[i] === '(') {\n\t\t\t\toperators.push(str[i]);\n\t\t\t} else if (str[i] >= 0 && str[i] <= 9) {\n\t\t\t\tlet temp = 0;\n\t\t\t\twhile (i < str.length && str[i] >= 0 && str[i] <= 9) {\n\t\t\t\t\ttemp = temp * 10 + (str[i] - '0');\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\ti--;\n\t\t\t\tnumArray.push(temp);\n\t\t\t} else if (str[i] === ')') {\n\t\t\t\twhile (operators.length > 0 && operators[operators.length - 1] !== '(') {\n\t\t\t\t\tlet num2 = numArray.pop();\n\t\t\t\t\tlet num1 = numArray.pop();\n\t\t\t\t\tlet operator = operators.pop();\n\t\t\t\t\tlet total = this.operation(num1, num2, operator);\n\t\t\t\t\tnumArray.push(total);\n\t\t\t\t}\n\t\t\t\tif (operators.length === 0) return 'Error';\n\t\t\t\telse operators.pop();\n\t\t\t} else {\n\t\t\t\twhile (\n\t\t\t\t\toperators.length > 0 &&\n\t\t\t\t\tthis.pre(operators[operators.length - 1]) >= this.pre(str[i])\n\t\t\t\t) {\n\t\t\t\t\tlet num2 = numArray.pop();\n\t\t\t\t\tlet num1 = numArray.pop();\n\t\t\t\t\tlet operator = operators.pop();\n\t\t\t\t\tnumArray.push(this.operation(num1, num2, operator));\n\t\t\t\t}\n\t\t\t\toperators.push(str[i]);\n\t\t\t}\n\t\t}\n\t\twhile (operators.length > 0) {\n\t\t\tlet num2 = numArray.pop();\n\t\t\tlet num1 = numArray.pop();\n\n\t\t\tif (operators[operators.length - 1] === '(') operators.pop();\n\t\t\tif (operators.length === 0) {\n\t\t\t\tif (num1 === 0) return num2;\n\t\t\t\telse return 'Error';\n\t\t\t}\n\t\t\tlet operator = operators.pop();\n\t\t\tnumArray.push(this.operation(num1, num2, operator));\n\t\t}\n\n\t\tlet n2 = numArray.pop();\n\t\tif (numArray.length === 0) return n2;\n\t\tlet n1 = numArray.pop();\n\t\t// console.log(n1, n2);\n\t\tif (n1 !== 0) return 'Error';\n\t\treturn n2;\n\t};\n\n\taddExp = (e, num) => {\n\t\t// console.log(num !== '=' && num !== 'C');\n\t\tif (num !== '=' && num !== 'C') {\n\t\t\tthis.setState((prev) => {\n\t\t\t\treturn {\n\t\t\t\t\texp: prev.exp + num,\n\t\t\t\t};\n\t\t\t});\n\t\t} else if (num === 'C') {\n\t\t\tthis.setState((prev) => {\n\t\t\t\treturn {\n\t\t\t\t\texp: '',\n\t\t\t\t\tans: 0,\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\tlet total = this.compute(this.state.exp, this.state.ans);\n\t\t\tif (isNaN(total) || typeof total === 'undefined')\n\t\t\t\tthis.setState(() => {\n\t\t\t\t\treturn { ans: 'Error', exp: '' };\n\t\t\t\t});\n\t\t\t// console.log(total);\n\t\t\telse {\n\t\t\t\tthis.setState((prev) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tans: total,\n\t\t\t\t\t\texp: '',\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<div className=\"screen\">\n\t\t\t\t\t{<h1>{this.state.ans}</h1>} {<h2>{this.state.exp}</h2>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"btns\">\n\t\t\t\t\t{this.props.numArray.map((num) => (\n\t\t\t\t\t\t// <button onClick={(e) => this.addExp(e, num)} className=\"btn\" key={num}>\n\t\t\t\t\t\t// \t{num}\n\t\t\t\t\t\t// </button>\n\t\t\t\t\t\t<Button addExp={this.addExp} key={num} btnValue={num} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst Button = (props) => {\n\treturn (\n\t\t<button onClick={(e) => props.addExp(e, props.btnValue)} className=\"btn\">\n\t\t\t{props.btnValue}\n\t\t</button>\n\t);\n};\n\nclass Calculator extends React.Component {\n\trender() {\n\t\tlet nums = [\n\t\t\t'C',\n\t\t\t'/',\n\t\t\t'*',\n\t\t\t'%',\n\t\t\t1,\n\t\t\t2,\n\t\t\t3,\n\t\t\t'-',\n\t\t\t4,\n\t\t\t5,\n\t\t\t6,\n\t\t\t'+',\n\t\t\t7,\n\t\t\t8,\n\t\t\t9,\n\t\t\t'=',\n\t\t\t0,\n\t\t\t'(',\n\t\t\t')',\n\t\t];\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Buttons numArray={nums} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Calculator;\n\n// class Button extends React.Component {\n// val(e, val) {\n// \tconst variable = e.target.getAttribute('val');\n// \tlet ans = 0,\n// \t\tnumVariable = [],\n// \t\toperVariable = [];\n// \tif (variable >= '9' && variable <= '0') {\n// \t\tnumvariable.push(+variable);\n// \t} else if (variable != '=') {\n// \t\toperVariable.push(variable);\n// \t} else {\n// \t\tcompute();\n// \t}\n\n// \t// console.log(\n// \t// \te.target.getAttribute('val') <= 9 && e.target.getAttribute('val') >= 0\n// \t// );\n// }\n// \trender() {\n// \t\treturn (\n// \t\t\t<button className=\"btn\" onClick={this.val} val={this.props.btnValue}>\n// \t\t\t\t{this.props.btnValue}\n// \t\t\t</button>\n// \t\t);\n// \t}\n// }\n\n// class Screen extends React.Component {\n// \trender() {\n//     return ();\n//   }\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}